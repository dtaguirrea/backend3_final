/adoptions:
  post:
    summary: Crear una nueva adopción
    description: Crea una adopción entre un usuario y una mascota
    tags:
      - Adopciones
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdoptionRequest'
    responses:
      200:
        description: Adopción creada exitosamente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adoption'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
  get:
    summary: Obtener todas las adopciones
    description: Devuelve una lista de todas las adopciones
    tags:
      - Adopciones
    responses:
      200:
        description: Lista de adopciones
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adoption'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/adoptions/{id}:
  get:
    summary: Obtener adopción por ID
    description: Devuelve los detalles de una adopción específica
    tags:
      - Adopciones
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID de la adopción
    responses:
      200:
        description: Información de la adopción
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adoption'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/users:
  post:
    summary: Crear un nuevo usuario
    description: Crea un usuario en el sistema
    tags:
      - Usuarios
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRequest'
    responses:
      200:
        description: Usuario creado exitosamente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  get:
    summary: Obtener todos los usuarios
    description: Devuelve una lista de todos los usuarios
    tags:
      - Usuarios
    responses:
      200:
        description: Lista de usuarios
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/users/{id}:
  get:
    summary: Obtener usuario por ID
    description: Devuelve los detalles de un usuario específico
    tags:
      - Usuarios
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID del usuario
    responses:
      200:
        description: Información del usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  put:
    summary: Actualizar un usuario
    description: Actualiza los datos de un usuario específico
    tags:
      - Usuarios
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID del usuario
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRequest'
    responses:
      200:
        description: Usuario actualizado exitosamente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  delete:
    summary: Eliminar un usuario
    description: Elimina un usuario por ID
    tags:
      - Usuarios
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID del usuario
    responses:
      200:
        description: Usuario eliminado exitosamente
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/pets:
  post:
    summary: Crear una nueva mascota
    description: Crea una nueva mascota en el sistema
    tags:
      - Mascotas
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PetRequest'
    responses:
      200:
        description: Mascota creada exitosamente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  get:
    summary: Obtener todas las mascotas
    description: Devuelve una lista de todas las mascotas
    tags:
      - Mascotas
    responses:
      200:
        description: Lista de mascotas
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/pets/{id}:
  put:
    summary: Actualizar una mascota
    description: Actualiza los datos de una mascota específica
    tags:
      - Mascotas
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID de la mascota
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PetRequest'
    responses:
      200:
        description: Mascota actualizada exitosamente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  delete:
    summary: Eliminar una mascota
    description: Elimina una mascota por ID
    tags:
      - Mascotas
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID de la mascota
    responses:
      200:
        description: Mascota eliminada exitosamente
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/mocks/mockingusers:
  get:
    summary: Generar usuarios mock
    description: Genera 50 usuarios mock para pruebas
    tags:
      - Mocks
    responses:
      200:
        description: Usuarios mock generados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/mocks/mockingpets:
  get:
    summary: Generar mascotas mock
    description: Genera 50 mascotas mock para pruebas
    tags:
      - Mocks
    responses:
      200:
        description: Mascotas mock generadas
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/mocks/mockingadoptions:
  get:
    summary: Generar adopciones mock
    description: Genera 50 adopciones mock para pruebas
    tags:
      - Mocks
    responses:
      200:
        description: Adopciones mock generadas
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adoption'
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/mocks/generateData:
  post:
    summary: Generar datos mock de usuarios y mascotas
    description: Genera un número específico de usuarios y mascotas mock para pruebas.
    tags:
      - Mocks
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MockDataRequest'
    responses:
      200:
        description: Datos generados exitosamente
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje indicando el éxito de la operación
                result:
                  type: object
                  properties:
                    users:
                      type: integer
                      description: Cantidad de usuarios generados
                    pets:
                      type: integer
                      description: Cantidad de mascotas generadas
              example:
                message: "Generated 50 users and 50 pets successfully"
                result:
                  users: 50
                  pets: 50
      500:
        description: Error interno del servidor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

